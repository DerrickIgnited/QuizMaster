openapi: 3.0.3
info:
  title: Quiz Master API
  description: API definition for Quiz Master backend services
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development server
paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      full_name:
                        type: string
                      role:
                        type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /auth/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - full_name
              properties:
                username:
                  type: string
                password:
                  type: string
                full_name:
                  type: string
                qualification:
                  type: string
                dob:
                  type: string
                  format: date
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Username already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /auth/logout:
    post:
      summary: User logout
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/dashboard:
    get:
      summary: Get admin dashboard stats
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Dashboard stats and lists
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
                    properties:
                      subjects:
                        type: integer
                      chapters:
                        type: integer
                      quizzes:
                        type: integer
                      users:
                        type: integer
                  subjects:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                  chapters:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        subject_id:
                          type: integer
                  quizzes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        chapter_id:
                          type: integer
                        date_of_quiz:
                          type: string
                        time_duration:
                          type: string
                        remarks:
                          type: string
  /admin/subjects:
    get:
      summary: Get list of subjects
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of subjects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
    post:
      summary: Create a new subject
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Subject created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/subjects/{subject_id}:
    put:
      summary: Update a subject
      security:
        - cookieAuth: []
      parameters:
        - name: subject_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Subject updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
    delete:
      summary: Delete a subject
      security:
        - cookieAuth: []
      parameters:
        - name: subject_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Subject deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/chapters:
    get:
      summary: Get list of chapters
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of chapters
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    subject_id:
                      type: integer
    post:
      summary: Create a new chapter
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - subject_id
              properties:
                name:
                  type: string
                description:
                  type: string
                subject_id:
                  type: integer
      responses:
        '200':
          description: Chapter created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/chapters/{chapter_id}:
    put:
      summary: Update a chapter
      security:
        - cookieAuth: []
      parameters:
        - name: chapter_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                subject_id:
                  type: integer
      responses:
        '200':
          description: Chapter updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
    delete:
      summary: Delete a chapter
      security:
        - cookieAuth: []
      parameters:
        - name: chapter_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Chapter deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/quizzes:
    get:
      summary: Get list of quizzes
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of quizzes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    chapter_id:
                      type: integer
                    date_of_quiz:
                      type: string
                    time_duration:
                      type: string
                    remarks:
                      type: string
                    chapter_name:
                      type: string
                    subject_name:
                      type: string
    post:
      summary: Create a new quiz
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - chapter_id
                - date_of_quiz
                - time_duration
                - remarks
              properties:
                chapter_id:
                  type: integer
                date_of_quiz:
                  type: string
                time_duration:
                  type: string
                remarks:
                  type: string
      responses:
        '200':
          description: Quiz created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/quizzes/{quiz_id}:
    put:
      summary: Update a quiz
      security:
        - cookieAuth: []
      parameters:
        - name: quiz_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chapter_id:
                  type: integer
                date_of_quiz:
                  type: string
                time_duration:
                  type: string
                remarks:
                  type: string
      responses:
        '200':
          description: Quiz updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
    delete:
      summary: Delete a quiz
      security:
        - cookieAuth: []
      parameters:
        - name: quiz_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Quiz deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/questions/{quiz_id}:
    get:
      summary: Get questions for a quiz
      security:
        - cookieAuth: []
      parameters:
        - name: quiz_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of questions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    quiz_id:
                      type: integer
                    question_statement:
                      type: string
                    option1:
                      type: string
                    option2:
                      type: string
                    option3:
                      type: string
                    option4:
                      type: string
                    correct_answer:
                      type: string
    post:
      summary: Add a question to a quiz
      security:
        - cookieAuth: []
      parameters:
        - name: quiz_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question_statement
                - option1
                - option2
                - option3
                - option4
                - correct_answer
              properties:
                question_statement:
                  type: string
                option1:
                  type: string
                option2:
                  type: string
                option3:
                  type: string
                option4:
                  type: string
                correct_answer:
                  type: string
      responses:
        '200':
          description: Question added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/questions/{question_id}:
    put:
      summary: Update a question
      security:
        - cookieAuth: []
      parameters:
        - name: question_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_statement:
                  type: string
                option1:
                  type: string
                option2:
                  type: string
                option3:
                  type: string
                option4:
                  type: string
                correct_answer:
                  type: string
      responses:
        '200':
          description: Question updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
    delete:
      summary: Delete a question
      security:
        - cookieAuth: []
      parameters:
        - name: question_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Question deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /admin/trigger-reminders:
    post:
      summary: Trigger export reminders
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Export triggered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /admin/users:
    get:
      summary: Get users with average scores
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of users with average scores
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    full_name:
                      type: string
                    average_score:
                      type: number
                      format: float
  /quiz/attempt/{quiz_id}:
    get:
      summary: Get quiz details and questions
      security:
        - cookieAuth: []
      parameters:
        - name: quiz_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Quiz details and questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  quiz:
                    type: object
                    properties:
                      id:
                        type: integer
                      chapter_name:
                        type: string
                      subject_name:
                        type: string
                      time_duration:
                        type: string
                      remarks:
                        type: string
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        question_statement:
                          type: string
                        option1:
                          type: string
                        option2:
                          type: string
                        option3:
                          type: string
                        option4:
                          type: string
        '401':
          description: Login required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /quiz/submit/{quiz_id}:
    post:
      summary: Submit quiz answers
      security:
        - cookieAuth: []
      parameters:
        - name: quiz_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: Quiz submission result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  score:
                    type: integer
                  total_questions:
                    type: integer
        '401':
          description: Login required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/dashboard:
    get:
      summary: Get user dashboard data
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User dashboard data
          content:
            application/json:
              schema:
                type: object
                properties:
                  quizzes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        chapter_id:
                          type: integer
                        date_of_quiz:
                          type: string
                        time_duration:
                          type: string
                        remarks:
                          type: string
                        chapter_name:
                          type: string
                        subject_name:
                          type: string
                  scores:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quiz_id:
                          type: integer
                        user_id:
                          type: integer
                        timestamp:
                          type: string
                        total_scored:
                          type: integer
                        quiz_name:
                          type: string
                        chapter_name:
                          type: string
                  recentScores:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quiz_id:
                          type: integer
                        user_id:
                          type: integer
                        timestamp:
                          type: string
                        total_scored:
                          type: integer
                        quiz_name:
                          type: string
                        chapter_name:
                          type: string
                  averageScore:
                    type: number
                    format: float
  /user/profile:
    get:
      summary: Get user profile
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User profile data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  full_name:
                    type: string
                  qualification:
                    type: string
                  dob:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update user profile
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - full_name
                - qualification
                - dob
              properties:
                username:
                  type: string
                full_name:
                  type: string
                qualification:
                  type: string
                dob:
                  type: string
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  full_name:
                    type: string
                  qualification:
                    type: string
                  dob:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user/change-password:
    put:
      summary: Change user password
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_password
                - new_password
              properties:
                current_password:
                  type: string
                new_password:
                  type: string
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Incorrect current password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /user/trigger-reminders:
    post:
      summary: Trigger export of user quiz history
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Export triggered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /chatbot/chat:
    post:
      summary: Chat with Quiz Master AI assistant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        '200':
          description: AI response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        '400':
          description: No message provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: API key not configured or AI service failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session
